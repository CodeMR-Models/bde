 bslstl.txt

@PURPOSE: Provide replacement classes for STL constructs.

@MNEMONIC: Basic Standard Library STL (bslstl)

@AUTHOR: Herve Bronnimann (hbronnim), Arthur Chiu (achiu21)

@DESCRIPTION: This package mainly provides replacement classes for STL
 constructs that required substantial modification to (inter)operate with BDE
 libraries.  In addition to STL replacement classes, this package also provides
 helper components for the STL implementation classes.  Finally, SGI extensions
 that are widely used within Bloomberg can also be found in this package.

 In general, the components in this package conform to the STL interface.
 However, the components (and hence the headers) are intended for private use
 only.  Clients should use the standard headers directly (e.g., include
 '<bsl_vector.h>' instead of '<bslstl_vector.h>').

/Hierarchical Synopsis
/---------------------
 The 'bslstl' package currently has 36 components having 7 levels of physical
 dependency.  The table below shows the hierarchical ordering of the
 components.  The order of components within each level is not architecturally
 significant, just alphabetical.
..
  7. bslstl_map
     bslstl_multimap
     bslstl_multiset
     bslstl_queue
     bslstl_set
     bslstl_stack

  6. bslstl_deque
     bslstl_mapcomparator
     bslstl_setcomparator
     bslstl_treenodepool

  5. bslstl_bitset
     bslstl_priorityqueue
     bslstl_randomaccessiterator
     bslstl_stringref
     bslstl_treenode

  4. bslstl_bidirectionaliterator
     bslstl_string
     bslstl_vector

  3. bslstl_containerbase
     bslstl_forwarditerator
     bslstl_list
     bslstl_treeiterator

  2. bslstl_allocatorproxy
     bslstl_iterator
     bslstl_simplepool

  1. bslstl_allocator
     bslstl_allocatortraits
     bslstl_hash
     bslstl_pair
     bslstl_stdexceptutil
     bslstl_stringrefdata
     bslstl_traitsgroupstlassociativecontainer
     bslstl_traitsgroupstlsequencecontainer
     bslstl_traitsgroupstlunorderedcontainer
     bslstl_util
..

/Component Synopsis
/------------------
 The following is a brief synopsis of the components in 'bslstl'.  For the sake
 of brevity, we sometimes blur the distinction between a component and the
 primary types that the component provides.  We remind the reader that, in
 general, the distinction between a component and a class is important.
..
  'bslstl_allocator'         - standard memory allocator interface; conforming
                               'std::allocator' implementation using
                               'bslma_Allocator'
  'bslstl_allocatorproxy'    - proxy allocator for 'bslstl_containerbase'
  'bslstl_allocatortraits'   - uniform interface to standard allocator types
  'bslstl_bidirectionaliterator'
                             - adapts an iterator to STL-compliant
                               bidirectional iterator interface
  'bslstl_bitset'            - conforming 'std::bitset' implementation
  'bslstl_containerbase'     - common functionality for STL containers
  'bslstl_deque'             - double-ended queue; conforming 'std::deque'
                               implementation
  'bslstl_forwarditerator'   - adapts an iterator to STL-compliant forward
                               iterator interface
  'bslstl_hash'              - hash functors for fundamental types
  'bslstl_iterator'          - basic iterator traits, adaptors, and utilities
  'bslstl_list'              - conforming 'std::list' implementation
  'bslstl_map'               - conforming 'std::map' implementation
  'bslstl_mapcomparator'     - adaptor comparator of key type objects to
                               comparator of node holding key-value pair
  'bslstl_multimap'          - conforming 'std::multimap' implementation
  'bslstl_multiset'          - conforming 'std::multiset' implementation
  'bslstl_pair'              - conforming 'std::pair' implementation
  'bslstl_priorityqueue'     - conforming 'std::priority_queue' implementation
  'bslstl_queue'             - conforming 'std::queue' implementation
  'bslstl_randomaccessiterator'
                             - adapts an iterator to STL-compliant random
                               access iterator interface
  'bslstl_set'               - conforming 'std::set' implementation
  'bslstl_setcomparator'     - adapt comparator of key to comparator of node
                               holding a key
  'bslstl_simplepool'        - provide memory blocks of a uniform,
                               parameterized size
  'bslstl_stack'             - conforming 'std::stack' implementation
  'bslstl_stdexceptutil'     - functions for throwing standard exceptions
  'bslstl_string'            - conforming 'std::string' implementation
  'bslstl_stringref'         - reference wrapper to 'const' strings
  'bslstl_stringrefdata'     - attribute class referencing a sub-string
  'bslstl_traitsgroupstlassociativecontainer'
                             - traits group attached to STL ordered containers
                               ('set', 'map', etc.).
  'bslstl_traitsgroupstlsequencecontainer'
                             - traits group attached to STL sequence containers
                               ('deque', 'list', 'vector', etc.).
  'bslstl_traitsgroupstlunorderedcontainer'
                             - traits group attached to STL unordered
                               containers ('hash_set', 'hash_map', etc.).
  'bslstl_treeiterator'      - STL compliant bidirectional binary tree iterator
  'bslstl_treenode'          - POD-like node for red-black binary tree
  'bslstl_treenodepool'      - efficient memory manager of tree notes
  'bslstl_util'              - utilities for STL functionality
  'bslstl_vector'            - conforming 'std::vector' implementation
..
