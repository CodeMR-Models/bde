 bslalg.txt

@PURPOSE: Provide algorithms and traits used by the BDE STL implementation.

@MNEMONIC: Basic Standard Library ALgorithms (bslalg)

@AUTHOR: Herve Bronnimann (hbronnim)

@DESCRIPTION:  The 'bsl' library relies on several traits to identify
 properties of types, such as whether they use a memory allocator to supply
 memory resources, have a trivial default constructor, are POD types, etc.
 This package provides distinct traits types used to tag user-defined (client)
 types according to these properties and to select implementation of primitive
 algorithms customized to these properties.

 In addition to the various traits "tag" types, this package also provide
 implementations of said primitive algorithms (used to implement STL containers
 and other standard components in the 'bslstl' and 'bslstp' packages) that
 take advantage of these traits.

 This package group documentation is a stem.  It should be expanded with a
 lesson in the usage of type traits.  For now, please consult the individual
 component-level documentations.

/Hierarchical Synopsis
/---------------------
 'bslalg' currently has 32 components having 12 levels of physical dependency.
 The table below shows the hierarchical ordering of the components.
..
  12. bslalg_dequeprimitives
      bslalg_rbtreeutil

  11. bslalg_arrayprimitives

  10. bslalg_autoarraymovedestructor

   9. bslalg_autoarraydestructor

   8. bslalg_arraydestructionprimitives
      bslalg_constructorproxy
      bslalg_dequeiterator

   7. bslalg_scalarprimitives

   6. bslalg_autoscalardestructor
      bslalg_rangecompare

   5. bslalg_bitwiseeqpassthroughtrait
      bslalg_passthroughtrait
      bslalg_scalardestructionprimitives
      bslalg_selecttrait

   4. bslalg_hastrait

   3. bslalg_typetraits

   2. bslalg_rbtreeanchor
      bslalg_typetraitsgrouppod

   1. bslalg_dequeimputil
      bslalg_functoradapter
      bslalg_rbtreenode
      bslalg_swaputil
      bslalg_typetraitbitwisecopyable
      bslalg_typetraitbitwiseequalitycomparable
      bslalg_typetraitbitwisemoveable
      bslalg_typetraithaspointersemantics
      bslalg_typetraithasstliterators
      bslalg_typetraithastrivialdefaultconstructor
      bslalg_typetraitnil
      bslalg_typetraitpair
      bslalg_typetraitusesbslmaallocator
..

/Component Synopsis
/------------------
 The following is a brief synopsis of the components in 'bslalg'.  For the sake
 of brevity, we sometimes blur the distinction between a component and the
 primary types that the component provides.  We remind the reader that, in
 general, the distinction between a component and a class is important.

..
  'bslalg_arraydestructionprimitives'  - primitives for destroying arrays
  'bslalg_arrayprimitives'             - customized and traits-aware
                                         primitives for manipulating arrays of
                                         parameterized types
  'bslalg_autoarraydestructor'         - scoped guard for destroying arrays
  'bslalg_autoarraymovedestructor'     - scoped guard for moving arrays back
                                         into original location (bit-wise
                                         moveable types only)
  'bslalg_autoscalardestructor'        - primitives for destroying scalars
  'bslalg_bitwiseeqpassthroughtrait'   - bitwise equality traits
                                         meta-computation
  'bslalg_constructorproxy'            - proxy for taking or eliding allocator
                                         constructor arguments based on
                                         'bslalg_TypeTraitUsesBslmaAllocator'
                                         trait
  'bslalg_dequeimputil'                - basic parameters and primitive data
                                         structures to implement 'bsl::deque'
  'bslalg_dequeiterator'               - primitive data structures for
                                         implementing 'bsl::deque' iterators
  'bslalg_dequeprimitives'             - primitive algorithms that operate on
                                         deques
  'bslalg_functoradapter'              - adapts callable objects to functors
  'bslalg_hastrait'                    - trait probing meta-computation
  'bslalg_passthroughtrait'            - traits meta-computation
  'bslalg_rangecompare'                - primitives for array and range
                                         comparisons
  'bslalg_rbtreeanchor'                - encapsulate root of red-black tree
  'bslalg_rbtreenode'                  - base class for red-black tree nodes
  'bslalg_rbtreeutil'                  - primitive algorithms on red-black
                                         trees
  'bslalg_scalardestructionprimitives' - primitives for destroying scalars
  'bslalg_scalarprimitives'            - customized and traits-aware
                                         primitives for manipulating scalars
                                         of parameterized types
  'bslalg_selecttrait'                 - trait selection meta-computation
  'bslalg_swaputil'                    - namespace for 'swap' utility function
  'bslalg_typetraitbitwisecopyable'    - trait attached to bit-wise copyable
                                         types (see component for definition)
  'bslalg_typetraitbitwiseequalitycomparable'
                                       - trait attached to bit-wise equality
                                         comparable types
  'bslalg_typetraitbitwisemoveable'    - trait attached to bit-wise moveable
                                         types (see component for definition)
  'bslalg_typetraithaspointersemantics'
                                       - trait attached to types having
                                         pointer semantics (see component for
                                         definition)
  'bslalg_typetraithasstliterators'    - trait attached to types having
                                         STL iterators, 'begin/end', etc.
  'bslalg_typetraithastrivialdefaultconstructor'
                                       - trait attached to types having STL
  'bslalg_typetraitnil'                - nil trait for fallback
  'bslalg_typetraitpair'               - trait attached to pair-like types
  'bslalg_typetraits'                  - template meta-programming to attach
                                         traits to type, sniff traits from
                                         types, deduce implied traits, etc.
  'bslalg_typetraitsgrouppod'          - traits group attached to POD types
  'bslalg_typetraitusesbslmaallocator' - trait attached to types taking memory
                                         allocator as the constructor last
                                         arguments
..
