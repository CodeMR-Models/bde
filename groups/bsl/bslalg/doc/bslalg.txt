 bslalg.txt

@PURPOSE: Provide algorithms and traits used by the BDE STL implementation.

@MNEMONIC: Basic Standard Library ALgorithms (bslalg)

@DESCRIPTION: This package provides facilities for implementing higher-level
 components (in particular, the standard library containers).  The facilities
 fall into three broad classes:

: o Utilities that provide efficient implementations of primitive operations
:   on generic data types (e.g., construction, copy-construction), optimized
:   based on the exposed traits of the type (e.g., bitwise-copyable,
:   uses-allocator).

: o Primitive data types and fundamental algorithms that form the basis of
:   standard library containers (e.g., linked lists, hash tables, Red/ Black
:   trees and deques).

: o Legacy traits types used to tag user-defined (client) types according to
:   properties such as whether they use a memory allocator to supply memory
:   resources, have a trivial default constructor, are POD types, etc.  These
:   traits types have been superceded by the traits in the 'bslmf' package,
:   and are implemented in terms of 'bslmf'.

/Hierarchical Synopsis
/---------------------
 The 'bslalg' package currently has 36 components having 9 levels of physical
 dependency.  The list below shows the hierarchical ordering of the components.
 The order of components within each level is not architecturally significant,
 just alphabetical.
..
  9. bslalg_dequeprimitives
     bslalg_rbtreeutil

  8. bslalg_arrayprimitives

  7. bslalg_autoarraymovedestructor

  6. bslalg_autoarraydestructor
     bslalg_hashtableimputil

  5. bslalg_arraydestructionprimitives
     bslalg_constructorproxy
     bslalg_dequeiterator
     bslalg_hashtableanchor

  4. bslalg_hashtablebucket
     bslalg_scalarprimitives

  3. bslalg_autoscalardestructor
     bslalg_bidirectionallinklistutil
     bslalg_bidirectionalnode
     bslalg_rangecompare
     bslalg_rbtreeanchor
     bslalg_selecttrait

  2. bslalg_bidirectionallink
     bslalg_containerbase
     bslalg_dequeimputil
     bslalg_functoradapter
     bslalg_hashutil
     bslalg_hastrait
     bslalg_rbtreenode
     bslalg_scalardestructionprimitives
     bslalg_swaputil
     bslalg_typetraitbitwisecopyable
     bslalg_typetraitbitwiseequalitycomparable
     bslalg_typetraitbitwisemoveable
     bslalg_typetraithaspointersemantics
     bslalg_typetraithasstliterators
     bslalg_typetraithastrivialdefaultconstructor
     bslalg_typetraitnil
     bslalg_typetraitusesbslmaallocator

  1. bslalg_typetraits
..

/Component Synopsis
/------------------
: 'bslalg_arraydestructionprimitives':
:      Provide primitive algorithms that destroy arrays.
:
: 'bslalg_arrayprimitives':
:      Provide primitive algorithms that operate on arrays.
:
: 'bslalg_autoarraydestructor':
:      Provide a proctor for destroying arrays.
:
: 'bslalg_autoarraymovedestructor':
:      Provide a proctor for destroying arrays.
:
: 'bslalg_autoscalardestructor':
:      Provide a proctor for destroying an object.
:
: 'bslalg_bidirectionallink':
:      Provide a basic link type for building doubly-linked lists.
:
: 'bslalg_bidirectionallinklistutil':
:      Provide utilities to maintain bidirectional list data structures.
:
: 'bslalg_bidirectionalnode':
:      Provide a node holding a value in a doubly-linked list.
:
: 'bslalg_constructorproxy':
:      Provide a proxy for constructing and destroying objects.
:
: 'bslalg_containerbase':
:      Provide a wrapper for STL allocators, respecting 'bslma' semantics.
:
: 'bslalg_dequeimputil':
:      Provide basic parameters and primitive data structures for deques.
:
: 'bslalg_dequeiterator':
:      Provide primitive data structures for implementing deques.
:
: 'bslalg_dequeprimitives':
:      Provide primitive algorithms that operate on deques.
:
: 'bslalg_functoradapter':
:      Provide an utility that adapts callable objects to functors.
:
: 'bslalg_hashtableanchor':
:      Provide a type holding the constituent parts of a hash table.
:
: 'bslalg_hashtablebucket':
:      Provide a bucket representation for hash table data structures.
:
: 'bslalg_hashtableimputil':
:      Provide algorithms for implementing a hash table.
:
: 'bslalg_hashutil':
:      Provide a utility of hash functions.
:
: 'bslalg_hastrait':
:      Provide facilities for checking compile-time trait.
:
: 'bslalg_rangecompare':
:      Provide algorithms to compare iterator-ranges of elements.
:
: 'bslalg_rbtreeanchor':
:      Encapsulate root, first, and last nodes of a tree with a count.
:
: 'bslalg_rbtreenode':
:      Provide a base class for a red-black binary tree node.
:
: 'bslalg_rbtreeutil':
:      Provide a suite of primitive algorithms on red-black trees.
:
: 'bslalg_scalardestructionprimitives':
:      Provide primitive algorithms that destroy scalars.
:
: 'bslalg_scalarprimitives':
:      Provide primitive algorithms that operate on single elements.
:
: 'bslalg_selecttrait':
:      Provide facilities for selecting compile-time trait.
:
: 'bslalg_swaputil':
:      Provide a simple to use 'swap' algorithm.
:
: 'bslalg_typetraitbitwisecopyable':
:      Provide a primitive type trait for bit-wise copyable classes.
:
: 'bslalg_typetraitbitwiseequalitycomparable':
:      Provide a primitive type trait for bit-wise eq.-comparable classes.
:
: 'bslalg_typetraitbitwisemoveable':
:      Provide a primitive type trait for bit-wise moveable classes.
:
: 'bslalg_typetraithaspointersemantics':
:      Provide a primitive type trait for classes with pointer semantics.
:
: 'bslalg_typetraithasstliterators':
:      Provide a primitive type trait for classes with STL-like iterators.
:
: 'bslalg_typetraithastrivialdefaultconstructor':
:      Provide a primitive type trait for class with trivial default ctor.
:
: 'bslalg_typetraitnil':
:      Provide a primitive trait for classes that have no other traits.
:
: 'bslalg_typetraitusesbslmaallocator':
:      Provide a primitive trait for types that use 'bslma' allocators.

