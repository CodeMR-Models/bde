 bdemf.txt

@PURPOSE: Provide meta-function versions of useful coding constructs.

@DEPRECATED: Use 'bslmf' components instead.

@MENMONIC: Basic Development Environment Meta-Functions (bdemf)

@AUTHOR Lea Fester (lfester)

@DESCRIPTION: The 'bdemf' package provides meta-function equivalents of 
 certain useful coding constructs.  A meta-function is a template-based,
 compile-time construct that behaves like a (runtime) function in that it
 "evaluates" arguments and does something different based on the input
 it is passed (in the case of templates, the input it is instantiated with).
 
 'bdemf' provides metafunctions to evaluate (at compile time) constructs such
 as the following: an if-statement equivalent, whether a (template) argument
 is a fundamental type, whether an argument is an 'enum' type, whether two
 arguments have the same type, and more.

/Hierarchical Synopsis
/---------------------
 The 'bdemf' package currently has 8 components having 2 levels of physical
 dependency.  The table below shows the hierarchical ordering of the
 components.  The order of components within each level is not architecturally
 significant, just alphabetical.
..
  2. bdemf_functionpointertraits
     bdemf_removereference

  1. bdemf_assert
     bdemf_if
     bdemf_isconvertible
     bdemf_isenum
     bdemf_issame
     bdemf_nil
..

/Component Synopsis
/------------------
: 'bdemf_assert':
:      Provide a compile-time-assert facility.
:
: 'bdemf_functionpointertraits':
:      Provide a meta-function for determining function pointer traits.
:
: 'bdemf_if':
:      Provide a compile-time 'if/else' (conditional) meta-function.
:
: 'bdemf_isconvertible':
:      Provide a compile-time type conversion checker.
:
: 'bdemf_isenum':
:      Provide compile-time detection of enumerated types
:
: 'bdemf_issame':
:      Provide an meta-function for checking if two types are the same.
:
: 'bdemf_nil':
:      Provide a nil type
:
: 'bdemf_removereference':
:      Provide a meta-function for removing reference-ness from types.
